{"Value.TypeToText":"\r\n\r\n(Value as any) as text =>\r\nlet\r\n\r\n  types = [\r\n    null         = type null\r\n  , logical      = type logical\r\n  , number       = type number\r\n  , time         = type time\r\n  , date         = type date\r\n  , datetime     = type datetime\r\n  , datetimezone = type datetimezone\r\n  , duration     = type duration\r\n  , text         = type text\r\n  , type         = type type\r\n  , list         = type list\r\n  , record       = type record\r\n  , table        = type table\r\n  , function     = type function\r\n  , binary       = type binary\r\n  , anynonnull   = type anynonnull\r\n  ]\r\n, Rules = List.Transform(Record.FieldNames(types), each {(x)=>Value.Is(x, Record.Field(types, _)), _})\r\n\r\nin List.First(List.Select(Rules, each _{0}(Value))){1}"}